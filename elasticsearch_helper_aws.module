<?php

/**
 * @file
 */

use Drupal\Core\Url;
use Elasticsearch\ClientBuilder;
use Aws\Credentials\CredentialProvider;
use Aws\Credentials\Credentials;
use Aws\ElasticsearchService\ElasticsearchPhpHandler;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_elasticsearch_helper_client_builder_alter().
 */
function elasticsearch_helper_aws_elasticsearch_helper_client_builder_alter(ClientBuilder $clientBuilder) {
  $config = \Drupal::config('elasticsearch_helper_aws.settings');
  $access_key_id = $config->get('access_key_id');
  $secret_access_key = $config->get('secret_access_key');
  $region = $config->get('region');

  if ($access_key_id && $secret_access_key && $region) {
    $provider = CredentialProvider::fromCredentials(
      new Credentials($access_key_id, $secret_access_key)
    );

    $handler = new ElasticsearchPhpHandler($region, $provider);

    $clientBuilder->setHandler($handler);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function elasticsearch_helper_aws_form_elasticsearch_helper_settings_form_alter(array &$form, FormStateInterface $form_state) {
  $form['aws_message'] = [
    '#type' => 'link',
    '#url' => Url::fromRoute('elasticsearch_helper_aws.settings_form'),
    '#title' => t('AWS Settings for Elasticsearch '),
  ];
}
